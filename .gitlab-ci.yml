image: python:3.8-alpine

stages:
  - setup
  - test

cache: &cache
  key: "${CI_PROJECT_ID}-default"
  paths:
    - .pip-cache
    - venv
    - .local

variables:
  PANDOC_VERSION: "2.9.2.1"
  # pip cache directory inside project since we can only cache local items
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

before_script:
  - export PATH="${CI_PROJECT_DIR}/.local/bin:$PATH"

install:
  stage: setup
  script:
    - apk add git build-base libxml2-dev libxslt-dev
    - mkdir -p .local
    - '[[ "$(pandoc -v | head -n1 | cut -f2 -d\ )" != "$PANDOC_VERSION" ]] && wget -qO- https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-linux-amd64.tar.gz | tar -xvzf - --strip-components 1 -C .local || true'
    - python -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip setuptools
    - pip install -r requirements.txt
    - ./setup.py install
  cache:
    <<: *cache

linting:
  stage: test
  script:
    - source venv/bin/activate
    - ./setup.py lint
  cache:
    <<: *cache
    paths:
      - venv
    policy: pull

unit tests:
  stage: test
  script:
    - source venv/bin/activate
    - mkdir -p ~/.panzer
    - ./setup.py test
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+)/'
  cache:
    <<: *cache
    paths:
      - venv
      - .local
    policy: pull
